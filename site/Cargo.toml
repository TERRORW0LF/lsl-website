[package]
name = "lsl-website"
version = "0.1.0"
edition = "2024"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
pages = {path = "../pages", default-features = false }
server = { path = "../server", default-features = false }
types = {path = "../types", default-features = false }

cfg-if.workspace = true
console_error_panic_hook.workspace = true
console_log.workspace = true
leptos.workspace = true
leptos_meta.workspace = true
leptos_router.workspace = true
log.workspace = true
simple_logger.workspace = true
wasm-bindgen.workspace = true
web-sys.workspace = true
axum = { workspace = true, optional = true }
axum_session = {workspace = true, optional = true }
axum_session_auth = { workspace = true, optional = true }
axum_session_sqlx = { workspace = true, optional = true }
http = { workspace = true, optional = true }
leptos_axum = { workspace = true, optional = true }
oauth2 = { workspace = true, optional = true }
reqwest = { workspace = true, optional = true }
sqlx = { workspace = true, optional = true }
tokio = { workspace = true, optional = true }
tower = { workspace = true, optional = true }

[features]
default = [ "ssr" ]
hydrate = [ "leptos/hydrate"]
ssr = [
    "dep:axum",
    "dep:axum_session",
    "dep:axum_session_auth",
    "dep:axum_session_sqlx",
    "dep:http",
    "dep:leptos_axum",
    "dep:oauth2",
    "dep:sqlx",
    "dep:tokio",
    "dep:tower",
    "leptos/ssr",
    "leptos_meta/ssr", 
    "leptos_router/ssr",
    "pages/ssr",
    "server/ssr",
    "types/ssr",
]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "lsl-website"

# Adds hashes to the css, js, and wasm files
hash-files = true

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
