[package]
name = "lsl-website"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
anyhow = "1.0.88"
cfg-if = "1"
chrono = { version = "0.4.38", features = ["serde"] }
console_error_panic_hook = "0.1"
console_log = "1"
http = "1.1.0"
leptos = { version = "0.7", features = ["nightly", "hydration"] }
leptos_meta = "0.7"
leptos_router = "0.7"
rust_decimal = "1.36.0"
serde = { version = "1.0.188", features = ["derive"] }
thiserror = "1.0.38"
log = "0.4"
server_fn = { version = "0.7", features = ["multipart"] }
simple_logger = "5"
strum = { version = "0.26", features = ["derive"] }
wasm-bindgen = "0.2.95"
web-sys = {version ="0.3", features = ["DomRectReadOnly", "ResizeObserver", "ResizeObserverEntry"] }
argon2 = { version = "0.5.3", optional = true }
axum = { version = "0.7.5", features = ["macros"], optional = true }
axum-server = { version = "0.7.1", optional = true }
axum_session = {version = "0.14.2", optional = true }
axum_session_auth = { version = "0.14.1", optional = true }
axum_session_sqlx = { version = "0.3.0", features = ["postgres", "tls-rustls"], optional = true }
leptos_axum = { version = "0.7", optional = true }
oauth2 = { version = "4.4.2", optional = true }
rand = { version = "0.8.5", optional = true }
reqwest = { version = "0.12.9", features = ["json"], optional = true }
rustls-acme = { version = "0.11.1", features = ["axum"], optional = true }
sqlx = { version = "0.8.2", features = ["postgres", "runtime-tokio", "tls-rustls", "macros", "chrono", "rust_decimal"], optional = true }
tokio = { version = "1.25.0", optional = true }
tokio-stream = { version = "0.1.16", optional = true }
tower = { version = "0.5.0", features = ["util"], optional = true }
tower-http = { version = "0.5", features = ["fs"], optional = true }
tracing = { version = "0.1.37", optional = true }
charming = "0.4.0"

[features]
default = [ "ssr" ]
hydrate = [ "leptos/hydrate"]
ssr = [
    "dep:argon2",
    "dep:axum",
    "dep:axum-server",
    "dep:axum_session",
    "dep:axum_session_auth",
    "dep:axum_session_sqlx",
    "dep:leptos_axum",
    "dep:oauth2",
    "dep:rand",
    "dep:reqwest",
    "dep:rustls-acme",
    "dep:sqlx",
    "dep:tokio",
    "dep:tokio-stream",
    "dep:tower",
    "dep:tower-http",
    "dep:tracing",
    "leptos/ssr",
    "leptos_meta/ssr", 
    "leptos_router/ssr",
]

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "lsl-website"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
